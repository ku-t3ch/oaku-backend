# ------------------------
# 1. Builder Stage
# ------------------------
FROM node:20-alpine AS builder

WORKDIR /app

# Install required system packages
RUN apk add --no-cache openssl bash

# Copy package files first (leverage Docker cache)
COPY package*.json ./

# Install ALL deps (including devDeps for build + Prisma CLI)
RUN npm ci

# Copy source code
COPY . .

# Generate Prisma client
RUN npx prisma generate

# Build TypeScript -> dist/
RUN npm run build


# ------------------------
# 2. Production Stage
# ------------------------
FROM node:20-alpine AS production

WORKDIR /app

# Install required system packages
RUN apk add --no-cache curl bash

# Copy package files first
COPY package*.json ./

# Install ONLY production deps
RUN npm ci --omit=dev

# Copy built app & Prisma client from builder stage
COPY --from=builder /app/dist ./dist
COPY --from=builder /app/node_modules/.prisma ./node_modules/.prisma
COPY --from=builder /app/prisma ./prisma

# Ensure non-root user
RUN addgroup -g 1001 -S nodejs \
    && adduser -S nodejs -u 1001 \
    && chown -R nodejs:nodejs /app

USER nodejs

EXPOSE 4001

# Healthcheck endpoint
HEALTHCHECK --interval=30s --timeout=10s --start-period=60s --retries=3 \
    CMD curl -f http://localhost:4001/health || exit 1

# Run app
CMD ["node", "dist/server.js"]
